apply plugin: 'com.android.application'

//赋值与引用
def rootAndroidId = rootProject.ext.androidId
def appId = rootProject.ext.appId
def support = rootProject.ext.dependencies

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId appId.app
        minSdkVersion rootAndroidId.minSdkVersion
        targetSdkVersion rootAndroidId.targetSdkVersion
        versionCode rootAndroidId.versionCode
        versionName rootAndroidId.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //这个方法接受是哪个非空的参数，第一个：确定值的类型，第二个：指定key的名字，第三个：传值（必须是String）
        //为什么需要定义这个？因为src代码中可能需要用到跨模块交互，如果是组件化模块显然不行
        //切记：不能在android根节点，只能在defaultConfig或者buildType节点下
        buildConfigField("boolean", "debug", String.valueOf(isRelease))

        //在gradle文件中配置选项参数值（用于APT传参接收）
        //切记，必须写在defaultConfig节点下
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation project(':common')

    //implementation project(':order')

    //注解处理器
    annotationProcessor project(':arouter_compiler')

    //如果是集成化模式，做发布版本时，各个模块都不能独立运行
    if (isRelease) {
        implementation project(':order')
        implementation project(':personal')

    }

    //引入annotation 处理ARouter注解
    implementation project(':arouter_annotation')
}
